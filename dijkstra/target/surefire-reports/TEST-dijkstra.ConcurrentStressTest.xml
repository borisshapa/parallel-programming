<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="4" failures="1" name="dijkstra.ConcurrentStressTest" time="103.157" errors="1" skipped="0">
  <properties>
    <property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/usr/lib64:/lib64:/usr/lib:/lib:/lib/i386-linux-gnu:/lib32:/usr/lib/x86_64-linux-gnu/libfakeroot"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="11.0.8+10-post-Ubuntu-0ubuntu120.04"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/borisshapa/Projects/mpp/dijkstra-borisshapa"/>
    <property name="java.vm.vendor" value="Ubuntu"/>
    <property name="java.vendor.url" value="https://ubuntu.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="jna.loaded" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/borisshapa/Projects/mpp/dijkstra-borisshapa"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="java.runtime.version" value="11.0.8+10-post-Ubuntu-0ubuntu120.04"/>
    <property name="kotlin.incremental.compilation" value="false"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="jnidispatch.path" value="/tmp/jna--1925163186/jna10722421067756808681.tmp"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="55.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="5.4.0-48-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/borisshapa"/>
    <property name="user.timezone" value="Europe/Moscow"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="11"/>
    <property name="user.name" value="borisshapa"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test"/>
    <property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="11.0.8"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="java.vendor" value="Ubuntu"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2020-07-14"/>
    <property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="dijkstra.ConcurrentStressTest" name="test on big graphs" time="100.026">
    <error message="test timed out after 100000 milliseconds" type="org.junit.runners.model.TestTimedOutException">org.junit.runners.model.TestTimedOutException: test timed out after 100000 milliseconds
	at java.base@11.0.8/java.util.PriorityQueue.siftUpUsingComparator(PriorityQueue.java:679)
	at java.base@11.0.8/java.util.PriorityQueue.siftUp(PriorityQueue.java:652)
	at java.base@11.0.8/java.util.PriorityQueue.removeAt(PriorityQueue.java:630)
	at java.base@11.0.8/java.util.PriorityQueue.remove(PriorityQueue.java:380)
	at app//dijkstra.DijkstraSequentialKt.shortestPathSequential(DijkstraSequential.kt:17)
	at app//dijkstra.ConcurrentStressTest.testOnRandomGraphs(ConcurrentStressTest.kt:35)
	at app//dijkstra.ConcurrentStressTest.test on big graphs(ConcurrentStressTest.kt:26)
	at java.base@11.0.8/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.8/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.8/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.8/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at app//org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at app//org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at app//org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at app//org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at app//org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.base@11.0.8/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base@11.0.8/java.lang.Thread.run(Thread.java:834)
</error>
  </testcase>
  <testcase classname="dijkstra.ConcurrentStressTest" name="test on small graphs" time="1.427">
    <failure message="Expected &lt;[35, 12, 0, 28, 26, 29, 48, 23, 23, 16, 25, 22, 20, 37, 21, 17, 21, 21, 32, 9, 16, 32, 25, 20, 16, 28, 23, 8, 24, 27, 30, 36, 15, 20, 35, 25, 30, 26, 16, 24, 31, 23, 27, 20, 27, 18, 16, 24, 19, 27, 12, 27, 21, 25, 40, 26, 17, 20, 19, 28, 37, 28, 8, 28, 26, 3, 33, 35, 20, 27, 33, 9, 17, 28, 24, 30, 13, 14, 17, 6, 23, 21, 23, 42, 23, 8, 21, 24, 19, 20, 24, 40, 37, 24, 20, 12, 24, 5, 18, 15]&gt;, actual &lt;[35, 12, 0, 28, 26, 29, 48, 23, 23, 16, 25, 22, 20, 37, 21, 17, 21, 21, 32, 9, 16, 32, 25, 20, 16, 28, 23, 8, 24, 27, 30, 36, 15, 20, 35, 25, 30, 26, 16, 24, 31, 23, 27, 20, 27, 18, 16, 24, 19, 27, 12, 27, 21, 25, 43, 26, 17, 20, 19, 28, 37, 28, 8, 28, 26, 3, 33, 35, 20, 27, 33, 9, 17, 28, 24, 30, 13, 14, 17, 6, 23, 21, 23, 42, 23, 8, 21, 24, 19, 20, 24, 40, 37, 24, 20, 12, 24, 5, 18, 15]&gt;." type="java.lang.AssertionError">java.lang.AssertionError: Expected &lt;[35, 12, 0, 28, 26, 29, 48, 23, 23, 16, 25, 22, 20, 37, 21, 17, 21, 21, 32, 9, 16, 32, 25, 20, 16, 28, 23, 8, 24, 27, 30, 36, 15, 20, 35, 25, 30, 26, 16, 24, 31, 23, 27, 20, 27, 18, 16, 24, 19, 27, 12, 27, 21, 25, 40, 26, 17, 20, 19, 28, 37, 28, 8, 28, 26, 3, 33, 35, 20, 27, 33, 9, 17, 28, 24, 30, 13, 14, 17, 6, 23, 21, 23, 42, 23, 8, 21, 24, 19, 20, 24, 40, 37, 24, 20, 12, 24, 5, 18, 15]&gt;, actual &lt;[35, 12, 0, 28, 26, 29, 48, 23, 23, 16, 25, 22, 20, 37, 21, 17, 21, 21, 32, 9, 16, 32, 25, 20, 16, 28, 23, 8, 24, 27, 30, 36, 15, 20, 35, 25, 30, 26, 16, 24, 31, 23, 27, 20, 27, 18, 16, 24, 19, 27, 12, 27, 21, 25, 43, 26, 17, 20, 19, 28, 37, 28, 8, 28, 26, 3, 33, 35, 20, 27, 33, 9, 17, 28, 24, 30, 13, 14, 17, 6, 23, 21, 23, 42, 23, 8, 21, 24, 19, 20, 24, 40, 37, 24, 20, 12, 24, 5, 18, 15]&gt;.
	at kotlin.test.DefaultAsserter.fail(DefaultAsserter.kt:16)
	at kotlin.test.Asserter$DefaultImpls.assertTrue(Assertions.kt:196)
	at kotlin.test.DefaultAsserter.assertTrue(DefaultAsserter.kt:11)
	at kotlin.test.Asserter$DefaultImpls.assertEquals(Assertions.kt:215)
	at kotlin.test.DefaultAsserter.assertEquals(DefaultAsserter.kt:11)
	at kotlin.test.AssertionsKt__AssertionsKt.assertEquals(Assertions.kt:51)
	at kotlin.test.AssertionsKt.assertEquals(Unknown Source)
	at kotlin.test.AssertionsKt__AssertionsKt.assertEquals$default(Assertions.kt:50)
	at kotlin.test.AssertionsKt.assertEquals$default(Unknown Source)
	at dijkstra.ConcurrentStressTest.testOnRandomGraphs(ConcurrentStressTest.kt:41)
	at dijkstra.ConcurrentStressTest.test on small graphs(ConcurrentStressTest.kt:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
  </testcase>
  <testcase classname="dijkstra.ConcurrentStressTest" name="test on trees" time="0.98"/>
  <testcase classname="dijkstra.ConcurrentStressTest" name="test on very small graphs" time="0.724"/>
</testsuite>